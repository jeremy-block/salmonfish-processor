saveVis("conclusion-conf.pdf",h = 3, writeToDisk = F)
# doing this manually cause I can't figure out how to do it otherwise
#run an omnibus fisher test
TBL <- rbind(c(3,4,9),c(9,8,3))
# matrix(c(3,4,9,9,8,3), ncol = 2, nrow = 3) %>%
# view() #just to check the shape
fisher.test(TBL)
# p-value = 0.03908 - Significant Difference in conclusion confidence by conditions
# alternative hypothesis: two.sided
chisq.test(TBL, sim=T)
# Pearson's Chi-squared test with simulated p-value looks similar
# data:  TBL
# X-squared = 6.975, df = NA, p-value = 0.04598
# Post Hoc tests - Control vs Coverage
matrix(c(3,4,9,8), ncol = 2, nrow = 2) %>%
fisher.test(.)
# p-value = 1 - can not detect difference in Control confidence vs Coverage confidence
# alternative hypothesis: true odds ratio is not equal to 1
# 95 percent confidence interval:  0.07478974 5.44837199
# sample estimates: odds ratio   0.6780693
#Control vs History
matrix(c(3,9,9,3), ncol = 2, nrow = 2) %>%
fisher.test(.)
# p-value = 0.03913 - This is low, but not lower then the Bonferroni corrected p value (0.05/3 = 0.0166) to be significant.
# alternative hypothesis: true odds ratio is not equal to 1
# 95 percent confidence interval:  0.01182317 0.92218820
# sample estimates: odds ratio   0.1241874
#Coverage vs History
matrix(c(4,9,8,3), ncol = 2, nrow = 2) %>%
fisher.test(.)
# p-value = 0.09953 This is low, but not lower then the Bonferroni corrected p value (0.05/3 = 0.0166) to be significant.
# alternative hypothesis: true odds ratio is not equal to 1
# 95 percent confidence interval:  0.01926453 1.27807212
# sample estimates:  odds ratio 0.1814096
##### Overlap with prior Analyst ####
df.Participants %>%
ggplot( data = ., mapping = aes(x=Condition, y=overlapWA*15, fill=Condition)) +
geom_boxplot( col="#353535")+
# geom_jitter(height=0, width = 0.2)+
# geom_point(alpha =0.3)+
labs(
title = "Overlap with Prior Analysis",
x = NULL,
y = "Number of Documents"
)+
my_fill_colors +
theme(legend.position = "none",
panel.grid.major.x = element_blank())+
ylim(0,15)+
boldTextTheme
saveVis("overlap-box.pdf", h = 4, writeToDisk = F)
#running Anova
df.Participants %>%
aov(overlapWA ~ Condition, data = .) %>%
summary()
# # Do not see an effect:
# Df Sum Sq Mean Sq F value Pr(>F)
# Condition    2 0.0699 0.03494   0.501   0.61
# Residuals   33 2.3015 0.06974
##### independence from Prior Analyst ####
df.Participants %>%
ggplot( data = ., mapping = aes(x=Condition, y=independence, fill=Condition)) +
geom_boxplot(col="#353535")+
# geom_jitter(height=0, width = 0.2)+
# geom_point(alpha =0.3)+
geom_signif(comparisons = list(c("Control","History")),
map_signif_level = TRUE,
test = "wilcox.test",
annotations = "p = 0.0066",
tip_length = c(0.1,0.15),
y_position = 0.95
)+
labs(
title = "Independence from Prior Analysis",
x = NULL,
y = "Percent"
)+
my_fill_colors +
scale_y_continuous(labels = scales::percent,
breaks = c(0.0,0.25,0.50,0.75,1.0))+
theme(legend.position = "none",
panel.grid.major.x = element_blank())+
# ylim(0,15)+
boldTextTheme
saveVis("independence-box.pdf", h = 4, writeToDisk = F)
#running Anova
model <- df.Participants %>%
aov(independence ~ Condition, data = .)
summary(model)
anova(model)
# # see an omnibus effect:
#        Df Sum Sq Mean Sq F value Pr(>F)
# Condition    2 0.3082 0.15408   4.274 0.0224 *
# Residuals   33 1.1896 0.03605
#There's a strong skew in the independence metric. want to make sure this is okay before doing post-hoc comparisons.
hist(residuals(model))
plot(fitted(model), residuals(model))
#The residuals should be unbiased and homoscedastic
gqtest(model, order.by = ~Condition, data=df.Participants, fraction = 0)
# GQ = 1.986, df1 = 15, df2 = 15, p-value = 0.09775
#close, but Not significantly different from homoscedastic. so we can work with the significant result.
TukeyHSD(model, conf.level=.95)
plot (TukeyHSD(model, conf.level=.95) )
##### Filtering Linechart ####
# #Testing the potential models to use for the time.
# fit1 <- lm(value~poly(time2,1), data=df.Filtering) # ERROR: Ops.difftime not defined for "difftime" objects - not sure how I had this working before...
# fit2 <- lm(value~poly(time2,2), data=df.Filtering)
# fit3 <- lm(value~poly(time2,3), data=df.Filtering)
# fit4 <- lm(value~poly(time2,4), data=df.Filtering)
# fit5 <- lm(value~poly(time2,5), data=df.Filtering)
# fit6 <- lm(value~poly(time2,6), data=df.Filtering)
# fit7 <- lm(value~poly(time2,7), data=df.Filtering)
# # Looking at R^2 values to find the model that explains the curves best.
# plot(x = seq(1:7),
#      y = c(
#        summary(fit1)$adj.r.squared,
#        summary(fit2)$adj.r.squared,
#        summary(fit3)$adj.r.squared, #largest step in r2 adj
#        summary(fit4)$adj.r.squared, #best r2 adj overall= 0.745307
#        summary(fit5)$adj.r.squared,
#        summary(fit6)$adj.r.squared,
#        summary(fit7)$adj.r.squared))
# confint(fit3, level=0.95)
# #Look for significance (which terms in the model are significant)
# #all are significant in 3 factor model.
#
# # test for homeostacity
# library(lmtest)
# plot(fitted(fit3),residuals(fit3))
# gqtest(fit3, order.by = ~cond, data=Filtering, fraction =0)
# # p value = 1 - so homostocastic representation.
df.Filtering %>%
ggplot(data = ., mapping = aes(x=time2, y=value, color= cond)) +
geom_line(mapping=aes(group=df.Filtering$ID, alpha=0.4)) +
geom_smooth(
aes(size = 4),#col = "y ~ log(x)", fill = "y ~ log(x)"),
method = "lm",
formula = y~poly(x, 4),
se = FALSE, # Plot the standard error
level = 0.95,
fullrange = TRUE, # The fit spans the full range of the horizontal axis
show.legend = FALSE
) +
geom_abline(slope = 0,intercept = 0.5, linetype = "dashed")+
# geom_segment(aes(x = hms(724), y = 0.5, xend = hms(1170), yend = 0.5, size = 3), linetype = "dashed",  color="#bfbfbf")+ #"#FFA07A")+
# geom_segment(aes(x = hms(900), y = 0.0, xend = hms(924), yend = 0.5, size = 3), color="#ababab")+ #"#FFA07A")+
# geom_vline(xintercept = hms(924), linetype = "dashed")+
# geom_vline(xintercept = (997), linetype = "dashed")+ #Time when more than 50% of participants had finished half their filters.
# geom_line(mapping=aes(x=variable, y=0.5, size = 2))+
# facet_grid(cond ~.)+
my_edge_colors +
boldTextTheme+
labs(title = "Filtering Interactions Over Time by Condition",
x = "Time",
y = "Percent of Individual's Filtering Behaviors",
caption = "2 participants excluded from Control group due to 0 filtering behaviors.") +
guides(
size = "none",
alpha = "none"
)+
scale_y_continuous(labels = scales::percent,
breaks = c(0.0,0.25,0.50,0.75,1.0))+
scale_x_datetime(
date_breaks = "3 min",
date_labels = "%M:%S",
date_minor_breaks = "3 min")+
theme(
# axis.text.x = element_text(angle=90),
# axis.ticks = element_blank(),
# panel.background = element_blank(),
legend.position = c(0.15, 0.85),
legend.background = element_rect(fill = "white"),
)
saveVis("filtering-over-time-100-short.pdf", w=4,h=3, writeToDisk = T)
saveVis("filtering-over-time-100-short.pdf", w=6,h=4, writeToDisk = T)
saveVis("filtering-over-time-100-short.pdf", w=10,h=7, writeToDisk = T)
saveVis("filtering-over-time-100-short.pdf", w=8,h=5, writeToDisk = T)
##### Strategies ####
df.Strategies %>%
summarise(counts = n()) %>%
ggplot(aes(x=strategy, y= counts, fill=Cond)) +
geom_bar(stat="identity", position = "dodge", col="#353535") +
geom_text(aes(label = counts), position = position_dodge(0.9), vjust = 1.5, colour = "black")+
my_fill_colors +
boldTextTheme +
theme(legend.position = "top")+
labs(
title = "Overall Strategies by Condition",
x = "Strategy",
y="Count"
) +
scale_y_continuous(breaks = c(0, 3, 6, 9),
minor_breaks = seq(0, 9, 1))
saveVis("strategy_zhao.pdf", h = 3, writeToDisk = F)
## Alternate - Stacked  column ##
df.Strategies %>%
summarise(counts = n()) %>%
ggplot(aes(x=strategy, y= counts, fill=Cond)) +
geom_col() +
# geom_text(aes(label=counts))+ #TODO: fix the positioning of these numbers
my_fill_colors +
boldTextTheme +
theme(legend.position = "top")+
labs(
title = "Overall Strategies by Condition",
x = "Strategy",
y="Count"
) +
scale_y_continuous(breaks = c(0, 3, 6, 9, 12, 15),
minor_breaks = seq(0, 15, 1))
saveVis("strategy_zhao-stacked.pdf", h = 4, writeToDisk = F)
test.strategies <- df.Strategies %>%
summarise(strategy) %>%
matrix
test.strategies %>%
table
fisher.test(table(test.strategies))
#p-value = 0.09339
chisq.test(table(test.strategies), correct = T)
#X-squared = 11.281, df = 6, p-value = 0.08006
#X-squared = 11.281, df = 6, p-value = 0.08006
#not the same... but also not significant difference between the different strategies.
##### Overlap with prior Analyst ####
df.Participants %>%
ggplot( data = ., mapping = aes(x=Condition, y=overlapWA*15, fill=Condition)) +
geom_boxplot( col="#353535")+
# geom_jitter(height=0, width = 0.2)+
# geom_point(alpha =0.3)+
labs(
title = "Overlap with Prior Analysis",
x = NULL,
y = "Number of Documents"
)+
my_fill_colors +
theme(legend.position = "none",
panel.grid.major.x = element_blank())+
ylim(0,15)+
boldTextTheme
saveVis("overlap-box.pdf", h = 4, writeToDisk = F)
#running Anova
df.Participants %>%
aov(overlapWA ~ Condition, data = .) %>%
summary()
##### independence from Prior Analyst ####
df.Participants %>%
ggplot( data = ., mapping = aes(x=Condition, y=independence, fill=Condition)) +
geom_boxplot(col="#353535")+
# geom_jitter(height=0, width = 0.2)+
# geom_point(alpha =0.3)+
geom_signif(comparisons = list(c("Control","History")),
map_signif_level = TRUE,
test = "wilcox.test",
annotations = "p = 0.0066",
tip_length = c(0.1,0.15),
y_position = 0.95
)+
labs(
title = "Independence from Prior Analysis",
x = NULL,
y = "Percent"
)+
my_fill_colors +
scale_y_continuous(labels = scales::percent,
breaks = c(0.0,0.25,0.50,0.75,1.0))+
theme(legend.position = "none",
panel.grid.major.x = element_blank())+
# ylim(0,15)+
boldTextTheme
saveVis("independence-box.pdf", h = 4, writeToDisk = F)
#running Anova
model <- df.Participants %>%
aov(independence ~ Condition, data = .)
summary(model)
anova(model)
#There's a strong skew in the independence metric. want to make sure this is okay before doing post-hoc comparisons.
hist(residuals(model))
plot(fitted(model), residuals(model))
#The residuals should be unbiased and homoscedastic
gqtest(model, order.by = ~Condition, data=df.Participants, fraction = 0)
TukeyHSD(model, conf.level=.95)
plot (TukeyHSD(model, conf.level=.95) )
df.Filtering %>%
ggplot(data = ., mapping = aes(x=time2, y=value, color= cond)) +
geom_line(mapping=aes(group=df.Filtering$ID, alpha=0.4)) +
geom_smooth(
aes(size = 4),#col = "y ~ log(x)", fill = "y ~ log(x)"),
method = "lm",
formula = y~poly(x, 4),
se = FALSE, # Plot the standard error
level = 0.95,
fullrange = TRUE, # The fit spans the full range of the horizontal axis
show.legend = FALSE
) +
geom_abline(slope = 0,intercept = 0.5, linetype = "dashed")+
# geom_segment(aes(x = hms(724), y = 0.5, xend = hms(1170), yend = 0.5, size = 3), linetype = "dashed",  color="#bfbfbf")+ #"#FFA07A")+
# geom_segment(aes(x = hms(900), y = 0.0, xend = hms(924), yend = 0.5, size = 3), color="#ababab")+ #"#FFA07A")+
# geom_vline(xintercept = hms(924), linetype = "dashed")+
# geom_vline(xintercept = (997), linetype = "dashed")+ #Time when more than 50% of participants had finished half their filters.
# geom_line(mapping=aes(x=variable, y=0.5, size = 2))+
# facet_grid(cond ~.)+
my_edge_colors +
boldTextTheme+
labs(title = "Filtering Interactions Over Time by Condition",
x = "Time",
y = "Percent of Individual's Filtering Behaviors",
caption = "2 participants excluded from Control group due to 0 filtering behaviors.") +
guides(
size = "none",
alpha = "none"
)+
scale_y_continuous(labels = scales::percent,
breaks = c(0.0,0.25,0.50,0.75,1.0))+
scale_x_datetime(
date_breaks = "3 min",
date_labels = "%M:%S",
date_minor_breaks = "3 min")+
theme(
# axis.text.x = element_text(angle=90),
# axis.ticks = element_blank(),
# panel.background = element_blank(),
legend.position = c(0.15, 0.85),
legend.background = element_rect(fill = "white"),
)
saveVis("filtering-over-time-100-short.pdf", w=8,h=5, writeToDisk = T)
###### Testing Filtering significance ######
is_filtered <- function(x,keyValue) { #define a classification function to return booleans
return (x >= keyValue)
}
#Pull data from a particular time period, augment a truth value to classify it.
filter.tbl <- Filtering%>%
filter(variable == as_hms(899)) %>% # get values at time: 00:14:99
group_by(cond) %>%
mutate("50-filtered" = is_filtered(value, 0.5)) %>%
summarize(`50-filtered`) %>%
matrix %>%
table # %>%
#run a fisher test
fisher.test((filter.tbl))
# p-value = 0.0001854 #Significant Omnibus test
# alternative hypothesis: two.sided
#try again with chi.sq ## similar but different results.
chisq.test(table(filter.tbl), correct = T)
# ## Post hoc comparisons of filtering behaviors at 50% of time.
# bonferroni corrected alpha is now: 0.05/3 = 0.016666
#doing this manually cause I can't figure out how to do it otherwise
matrix(c(8,1,2,11), ncol = 2) %>%
fisher.test(.)
# p-value = 0.001548 - History differs from control in filtering behavior at 50% time
# alternative hypothesis: true odds ratio is not equal to 1
# 95 percent confidence interval:     2.58239 2081.94988
# sample estimates: odds ratio:  33.24984
matrix(c(8,10,2,2), ncol = 2) %>%
fisher.test(.)
# p-value = 1 - No difference in filtering behavior for Coverage and Control
# alternative hypothesis: true odds ratio is not equal to 1
# 95 percent confidence interval:   0.04824193 13.50821820
# sample estimates: odds ratio   0.8082103
matrix(c(1,10,11,2), ncol = 2) %>%
fisher.test(.)
##### Strategies ####
df.Strategies %>%
summarise(counts = n()) %>%
ggplot(aes(x=strategy, y= counts, fill=Cond)) +
geom_bar(stat="identity", position = "dodge", col="#353535") +
geom_text(aes(label = counts), position = position_dodge(0.9), vjust = 1.5, colour = "black")+
my_fill_colors +
boldTextTheme +
theme(legend.position = "top")+
labs(
title = "Overall Strategies by Condition",
x = "Strategy",
y="Count"
) +
scale_y_continuous(breaks = c(0, 3, 6, 9),
minor_breaks = seq(0, 9, 1))
saveVis("strategy_zhao.pdf", h = 3, writeToDisk = F)
## Alternate - Stacked  column ##
df.Strategies %>%
summarise(counts = n()) %>%
ggplot(aes(x=strategy, y= counts, fill=Cond)) +
geom_col() +
# geom_text(aes(label=counts))+ #TODO: fix the positioning of these numbers
my_fill_colors +
boldTextTheme +
theme(legend.position = "top")+
labs(
title = "Overall Strategies by Condition",
x = "Strategy",
y="Count"
) +
scale_y_continuous(breaks = c(0, 3, 6, 9, 12, 15),
minor_breaks = seq(0, 15, 1))
saveVis("strategy_zhao-stacked.pdf", h = 4, writeToDisk = F)
test.strategies <- df.Strategies %>%
summarise(strategy) %>%
matrix
test.strategies %>%
table
fisher.test(table(test.strategies))
#p-value = 0.09339
chisq.test(table(test.strategies), correct = T)
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3,conclusionConf) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over")) %>%
select(-strategy_zhao3) %>%
mutate(conclusionConf = as.factor(conclusionConf)) %>%
group_by(Cond, strategy)
# summarise(counts = n())
summary(df.Strategies)
#getting values for table 2 in paper
df.InteractionStrategies <- merge(df.Participants,df.Strategies,by="userID")
df.InteractionStrategies%>%
filter(strategy == "Keyword Browsing") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Random Access") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Reviewing Origin") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Starting Over") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
# Made a visual version of Table 2
#todo: make scales better
#todo: remove significant lines for things that are not significant.
df.InteractionStrategies %>%
select(strategy,grossFilter,interactionRate,overlapWA,independence) %>%
rename(`Filtering Events` = grossFilter) %>%
rename(`Interaction Rate (interactions/sec)` = interactionRate)%>%
rename(`Overlap Ratio` = overlapWA) %>%
rename(`Independence Ratio` = independence) %>%
melt() %>%
ggplot(aes(y=strategy, x=value))+
geom_boxplot(aes(fill=strategy)) +
# geom_signif(comparisons = list(
#     c("Starting over", "Reviewing Origin"),
#     # c("Starting over","Random Access"),
#     # c("Starting over","Keyword Browsing"),
#     c("Reviewing Origin","Random Access"),
#     c("Reviewing Origin","Keyword Browsing"),
#     c("Random Access", "Keyword Browsing")),
#     test = "wilcox.test",
#     step_increase = 0.1,
#     map_signif_level=c("***"=0.001,"**"=0.01, "*"=0.05, " "=2)
# )+
my_strat_fill_colors +
facet_wrap(~variable, scales = "free", ncol=1) +
labs(x=NULL, y=NULL)+
theme(legend.position="none")
# Made a visual version of Table 2
#todo: make scales better
#todo: remove significant lines for things that are not significant.
df.InteractionStrategies %>%
select(strategy,grossFilter,interactionRate,overlapWA,independence) %>%
rename(`A. Filtering Events` = grossFilter) %>%
rename(`B. Interaction Rate (interactions/sec)` = interactionRate)%>%
rename(`C. Overlap Ratio` = overlapWA) %>%
rename(`D. Independence Ratio` = independence) %>%
melt() %>%
ggplot(aes(y=strategy, x=value))+
geom_boxplot(aes(fill=strategy)) +
# geom_signif(comparisons = list(
#     c("Starting over", "Reviewing Origin"),
#     # c("Starting over","Random Access"),
#     # c("Starting over","Keyword Browsing"),
#     c("Reviewing Origin","Random Access"),
#     c("Reviewing Origin","Keyword Browsing"),
#     c("Random Access", "Keyword Browsing")),
#     test = "wilcox.test",
#     step_increase = 0.1,
#     map_signif_level=c("***"=0.001,"**"=0.01, "*"=0.05, " "=2)
# )+
my_strat_fill_colors +
facet_wrap(~variable, scales = "free", ncol=1) +
labs(x=NULL, y=NULL)+
theme(legend.position="none")
# Made a visual version of Table 2
#todo: make scales better
#todo: remove significant lines for things that are not significant.
df.InteractionStrategies %>%
select(strategy,grossFilter,interactionRate,overlapWA,independence) %>%
rename(`Filtering Events` = grossFilter) %>%
rename(`Interaction Rate (interactions/sec)` = interactionRate)%>%
rename(`Overlap Ratio` = overlapWA) %>%
rename(`Independence Ratio` = independence) %>%
melt() %>%
ggplot(aes(y=strategy, x=value))+
geom_boxplot(aes(fill=strategy)) +
# geom_signif(comparisons = list(
#     c("Starting over", "Reviewing Origin"),
#     # c("Starting over","Random Access"),
#     # c("Starting over","Keyword Browsing"),
#     c("Reviewing Origin","Random Access"),
#     c("Reviewing Origin","Keyword Browsing"),
#     c("Random Access", "Keyword Browsing")),
#     test = "wilcox.test",
#     step_increase = 0.1,
#     map_signif_level=c("***"=0.001,"**"=0.01, "*"=0.05, " "=2)
# )+
my_strat_fill_colors +
facet_wrap(~variable, scales = "free", ncol=1) +
labs(x=NULL, y=NULL)+
theme(legend.position="none")
