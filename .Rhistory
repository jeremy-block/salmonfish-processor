df.Participants %>%
filter(Condition == "History") %>%
select(grossFilter,interactionRate,overlapWA,independence)%>%
summary
# visual version of Table 1 showing interaction log features by condition
#todo: make scales better?
df.Participants %>%
select(Condition,grossFilter,interactionRate,overlapWA,independence) %>%
rename(`Filtering Events` = grossFilter) %>%
rename(`Interaction Rate (interactions/sec)` = "interactionRate")%>%
rename(`Overlap Ratio` = overlapWA) %>%
rename(`Independence Ratio` = independence) %>%
melt() %>%
ggplot(aes(y=Condition, x=value))+
geom_boxplot(aes(fill=Condition)) +
# geom_signif(comparisons = list(
#   c("Control", "Coverage"),
#   c("Control","History"),
#   c("Coverage","History")),
#   test = "wilcox.test",
#   step_increase = 0.1,
#   map_signif_level=c("***"=0.001,"**"=0.01, "*"=0.05, " "=2)
# )+
facet_wrap(~variable, scales = "free", ncol=1) +
my_fill_colors+
labs(x=NULL, y=NULL)+
theme(legend.position="none")
saveVis("interactions-conditions.pdf", w=4,h=4, writeToDisk = T)
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
group_by(Cond, strategy)
# summarise(counts = n())
summary(df.Strategies)
#getting values for table 2 in paper
df.InteractionStrategies <- merge(df.Participants,df.Strategies,by="userID")
df.InteractionStrategies%>%
filter(strategy == "Keyword Browsing") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Random Access") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Reviewing Origin") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Starting over") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence)%>%
summary
# Made a visual version of Table 2
#todo: make scales better
#todo: remove significant lines for things that are not significant.
df.InteractionStrategies %>%
select(strategy,grossDocCount,grossFilter,interactionRate,overlapWA,independence) %>%
rename(`Document Opens` = grossDocCount) %>%
rename(`Filtering Events` = grossFilter) %>%
rename(`Interaction Rate (interactions/sec)` = interactionRate)%>%
rename(`Overlap Ratio` = overlapWA) %>%
rename(`Independence Ratio` = independence) %>%
melt() %>%
ggplot(aes(y=strategy, x=value))+
geom_boxplot(aes(fill=strategy)) +
geom_signif(comparisons = list(
c("Starting over", "Reviewing Origin"),
# c("Starting over","Random Access"),
# c("Starting over","Keyword Browsing"),
c("Reviewing Origin","Random Access"),
c("Reviewing Origin","Keyword Browsing"),
c("Random Access", "Keyword Browsing")),
test = "wilcox.test",
step_increase = 0.1,
map_signif_level=c("***"=0.001,"**"=0.01, "*"=0.05, " "=2)
)+
my_strat_fill_colors +
facet_wrap(~variable, scales = "free", ncol=1) +
labs(x=NULL, y=NULL)+
theme(legend.position="none")
# Made a visual version of Table 2
#todo: make scales better
#todo: remove significant lines for things that are not significant.
df.InteractionStrategies %>%
select(strategy,grossDocCount,grossFilter,interactionRate,overlapWA,independence) %>%
rename(`Document Opens` = grossDocCount) %>%
rename(`Filtering Events` = grossFilter) %>%
rename(`Interaction Rate (interactions/sec)` = interactionRate)%>%
rename(`Overlap Ratio` = overlapWA) %>%
rename(`Independence Ratio` = independence) %>%
melt() %>%
ggplot(aes(y=strategy, x=value))+
geom_boxplot(aes(fill=strategy)) +
# geom_signif(comparisons = list(
#     c("Starting over", "Reviewing Origin"),
#     # c("Starting over","Random Access"),
#     # c("Starting over","Keyword Browsing"),
#     c("Reviewing Origin","Random Access"),
#     c("Reviewing Origin","Keyword Browsing"),
#     c("Random Access", "Keyword Browsing")),
#     test = "wilcox.test",
#     step_increase = 0.1,
#     map_signif_level=c("***"=0.001,"**"=0.01, "*"=0.05, " "=2)
# )+
my_strat_fill_colors +
facet_wrap(~variable, scales = "free", ncol=1) +
labs(x=NULL, y=NULL)+
theme(legend.position="none")
# Made a visual version of Table 2
#todo: make scales better
#todo: remove significant lines for things that are not significant.
df.InteractionStrategies %>%
select(strategy,grossFilter,interactionRate,overlapWA,independence) %>%
rename(`Filtering Events` = grossFilter) %>%
rename(`Interaction Rate (interactions/sec)` = interactionRate)%>%
rename(`Overlap Ratio` = overlapWA) %>%
rename(`Independence Ratio` = independence) %>%
melt() %>%
ggplot(aes(y=strategy, x=value))+
geom_boxplot(aes(fill=strategy)) +
# geom_signif(comparisons = list(
#     c("Starting over", "Reviewing Origin"),
#     # c("Starting over","Random Access"),
#     # c("Starting over","Keyword Browsing"),
#     c("Reviewing Origin","Random Access"),
#     c("Reviewing Origin","Keyword Browsing"),
#     c("Random Access", "Keyword Browsing")),
#     test = "wilcox.test",
#     step_increase = 0.1,
#     map_signif_level=c("***"=0.001,"**"=0.01, "*"=0.05, " "=2)
# )+
my_strat_fill_colors +
facet_wrap(~variable, scales = "free", ncol=1) +
labs(x=NULL, y=NULL)+
theme(legend.position="none")
saveVis("interactions-strategies.pdf",w=4,h=4,writeToDisk = T)
df.InteractionStrategies%>%
filter(strategy == "Starting Over") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence)%>%
summary
View(df.Strategies)
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over",`2`='Coverage',`4`='History')) %>%
group_by(Cond, strategy)
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over")) %>%
group_by(Cond, strategy)
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over")) %>%
remove(strategy_zhao3) %>%
group_by(Cond, strategy)
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over")) %>%
mutate(~strategy_zhao3) %>%
group_by(Cond, strategy)
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over")) %>%
mutate(-strategy_zhao3) %>%
group_by(Cond, strategy)
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over")) %>%
select(-strategy_zhao3) %>%
group_by(Cond, strategy)
# summarise(counts = n())
summary(df.Strategies)
#getting values for table 2 in paper
df.InteractionStrategies <- merge(df.Participants,df.Strategies,by="userID")
df.InteractionStrategies%>%
filter(strategy == "Keyword Browsing") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Random Access") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Reviewing Origin") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Starting Over") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence)%>%
summary
# Made a visual version of Table 2
#todo: make scales better
#todo: remove significant lines for things that are not significant.
df.InteractionStrategies %>%
select(strategy,grossFilter,interactionRate,overlapWA,independence) %>%
rename(`Filtering Events` = grossFilter) %>%
rename(`Interaction Rate (interactions/sec)` = interactionRate)%>%
rename(`Overlap Ratio` = overlapWA) %>%
rename(`Independence Ratio` = independence) %>%
melt() %>%
ggplot(aes(y=strategy, x=value))+
geom_boxplot(aes(fill=strategy)) +
# geom_signif(comparisons = list(
#     c("Starting over", "Reviewing Origin"),
#     # c("Starting over","Random Access"),
#     # c("Starting over","Keyword Browsing"),
#     c("Reviewing Origin","Random Access"),
#     c("Reviewing Origin","Keyword Browsing"),
#     c("Random Access", "Keyword Browsing")),
#     test = "wilcox.test",
#     step_increase = 0.1,
#     map_signif_level=c("***"=0.001,"**"=0.01, "*"=0.05, " "=2)
# )+
my_strat_fill_colors +
facet_wrap(~variable, scales = "free", ncol=1) +
labs(x=NULL, y=NULL)+
theme(legend.position="none")
saveVis("interactions-strategies.pdf",w=4,h=4,writeToDisk = T)
df.InteractionStrategies%>%
filter(strategy == "Keyword Browsing") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
View(df.Participants)
View(df.Participants)
##### Strategies ####
df.Strategies %>%
summarise(counts = n()) %>%
ggplot(aes(x=strategy, y= counts, fill=Cond)) +
geom_bar(stat="identity", position = "dodge", col="#353535") +
geom_text(aes(label = counts), position = position_dodge(0.9), vjust = 1.5, colour = "black")+
my_fill_colors +
boldTextTheme +
theme(legend.position = "top")+
labs(
title = "Overall Strategies by Condition",
x = "Strategy",
y="Count"
) +
scale_y_continuous(breaks = c(0, 3, 6, 9),
minor_breaks = seq(0, 9, 1))
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over")) %>%
select(-strategy_zhao3) %>%
group_by(Cond, strategy)
#getting values for table 2 in paper
df.InteractionStrategies <- merge(df.Participants,df.Strategies,by="userID")
View(df.InteractionStrategies)
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3,conclusionConf) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over")) %>%
select(-strategy_zhao3) %>%
group_by(Cond, strategy)
# summarise(counts = n())
summary(df.Strategies)
#getting values for table 2 in paper
df.InteractionStrategies <- merge(df.Participants,df.Strategies,by="userID")
df.InteractionStrategies%>%
filter(strategy == "Keyword Browsing") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
##### Zhao Strategies #####
df.Strategies <- read_csv(file = "data/Participants-Use for Analysis.csv") %>%
select(userID, Cond, strategy_zhao3,conclusionConf) %>%
mutate(Cond = as.factor(Cond)) %>%
mutate(Cond = recode_factor(.x = Cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(strategy = as.factor(strategy_zhao3)) %>%
mutate(strategy = recode_factor(.x = strategy, `Starting over`="Starting Over")) %>%
select(-strategy_zhao3) %>%
mutate(conclusionConf = as.factor(conclusionConf)) %>%
group_by(Cond, strategy)
# summarise(counts = n())
summary(df.Strategies)
#getting values for table 2 in paper
df.InteractionStrategies <- merge(df.Participants,df.Strategies,by="userID")
df.InteractionStrategies%>%
filter(strategy == "Keyword Browsing") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Random Access") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Reviewing Origin") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
df.InteractionStrategies%>%
filter(strategy == "Starting Over") %>%
select(grossDocCount,grossFilter,interactionRate,overlapWA,independence,conclusionConf)%>%
summary
#Test each group for normality
normality <- df.Participants %>%
group_by(Condition) %>%
summarise(W = shapiro.test(independence)$statistic,
p.value = shapiro.test(independence)$p.value)
print(normality)
#Test each group for normality
normality <- df.Participants %>%
group_by(Condition) %>%
shapiro.test(.)
#Test each group for normality
normality <- df.Participants %>%
group_by(Condition) %>%
shapiro.test(independence)
print(normality)
# 1 Control   0.851  0.0374 * not normally distributed
# 2 Coverage  0.938  0.468
# 3 History   0.911  0.222
df.Participants %>%
filter(Condition = "Control") %>%
shapiro.test(independence)
# 1 Control   0.851  0.0374 * not normally distributed
# 2 Coverage  0.938  0.468
# 3 History   0.911  0.222
df.Participants %>%
filter(Condition = "Control") %>%
select(independence)
# 1 Control   0.851  0.0374 * not normally distributed
# 2 Coverage  0.938  0.468
# 3 History   0.911  0.222
df.Participants %>%
filter(Condition == "Control") %>%
select(independence)
# 1 Control   0.851  0.0374 * not normally distributed
# 2 Coverage  0.938  0.468
# 3 History   0.911  0.222
df.Participants %>%
filter(Condition == "Control") %>%
select(independence) %>%
shapiro.test(.)
# 1 Control   0.851  0.0374 * not normally distributed
# 2 Coverage  0.938  0.468
# 3 History   0.911  0.222
df.Participants %>%
filter(Condition == "Control") %>%
# select(independence) %>%
shapiro.test(independence)
df.Participants %>%
filter(Condition == "Control") %>%
select(independence) %>%
shapiro.test(.)
tommy <- df.Participants %>%
filter(Condition == "Control") %>%
select(independence)
shapiro.test(tommy)
tommy
#Dunn's Kruskal-Wallis post-hoc test
posthocs1<-dunnTest(independence ~ Condition, data=df.Participants, method="bonferroni")
print(posthocs1)
##### Filtering events as Percent completion Line chart ####
df.Filtering <- read_csv("data/100_affSearch_sum_rel.csv") %>% #can pull form this dataset since it's both searches and affiliation events
mutate(cond=as.factor(cond)) %>% #convert to factor
# cbind("type" = "Search") %>%  Residue from combining with Search and Tool Use
filter(ID != "1e5bbcef") %>% #remove user who did not search
filter(ID != "822b90c6") %>% # remove user who did not search
# select(-total)%>% #remove the column with the total filtering interactions
melt() %>% # make data tall
mutate(cond = recode_factor(cond, `1`="Control",`2`='Coverage',`4`='History')) %>%
mutate(variable = parse_hms(variable)) %>% #convert time columns to hms class.
na.omit()%>% # remove any of the rows for total if needed
filter(as_hms(variable) < 1800) %>% # removing interactions after 30 min.
# filter(as_hms(variable) < 1920) %>% # removing interactions after 32 min.
# mutate(variable = as.datetime(variable,'%m:%s')) #alternative datetime, that we've abandoned.
# mutate(value = value * 100) %>% # multiply the fractional value to make percentage
# filter(value < 100) %>%
mutate(ID=as.factor(ID)) %>% #convert to factor
group_by(ID) %>% #Draw lines according to this group.
mutate(time2 = as.POSIXct(variable, origin = "2021-12-01", tx = "GMT"))
df.Filtering %>%
ggplot(data = ., mapping = aes(x=time2, y=value, color= cond)) +
geom_line(mapping=aes(group=df.Filtering$ID, alpha=0.4)) +
geom_smooth(
aes(size = 4),#col = "y ~ log(x)", fill = "y ~ log(x)"),
method = "lm",
formula = y~poly(x, 4),
se = FALSE, # Plot the standard error
level = 0.95,
fullrange = TRUE, # The fit spans the full range of the horizontal axis
show.legend = FALSE
) +
geom_abline(slope = 0,intercept = 0.5, linetype = "dashed")+
# geom_segment(aes(x = hms(724), y = 0.5, xend = hms(1170), yend = 0.5, size = 3), linetype = "dashed",  color="#bfbfbf")+ #"#FFA07A")+
# geom_segment(aes(x = hms(900), y = 0.0, xend = hms(924), yend = 0.5, size = 3), color="#ababab")+ #"#FFA07A")+
# geom_vline(xintercept = hms(924), linetype = "dashed")+
# geom_vline(xintercept = (997), linetype = "dashed")+ #Time when more than 50% of participants had finished half their filters.
# geom_line(mapping=aes(x=variable, y=0.5, size = 2))+
# facet_grid(cond ~.)+
my_edge_colors +
boldTextTheme+
labs(title = "Filtering Interactions Over Time by Condition",
x = "Time",
y = "Percent of Individual's Filtering Behaviors",
caption = "2 participants removed from Control group due to 0 filtering behaviors.") +
guides(
size = "none",
alpha = "none"
)+
scale_y_continuous(labels = scales::percent,
breaks = c(0.0,0.25,0.50,0.75,1.0))+
scale_x_datetime(
date_breaks = "3 min",
date_labels = "%M:%S",
date_minor_breaks = "3 min")+
theme(
# axis.text.x = element_text(angle=90),
# axis.ticks = element_blank(),
# panel.background = element_blank(),
legend.position = c(0.15, 0.85),
legend.background = element_rect(fill = "white"),
)
confidence
##### Conclusion Conf. ####
df.Confidence %>%
ggplot(data=., aes(x=Confidence,y=Count,fill=Conditions))+
my_fill_colors +
geom_bar(position="dodge", stat="identity", col="#353535")+
geom_text(aes(label = Count), position = position_dodge(0.9), vjust = 1.5, colour = "black")+
# ylim(0,12)+
scale_y_continuous(breaks= c(3,6,9,12))+
labs(
title = "confidence in Conclusion by Condition",
x = "confidence",
x = NULL,
y="Number of participants"
)+
theme(legend.position="top")+
boldTextTheme
##### Conclusion Conf. ####
df.Confidence %>%
ggplot(data=., aes(x=Confidence,y=Count,fill=Conditions))+
my_fill_colors +
geom_bar(position="dodge", stat="identity", col="#353535")+
geom_text(aes(label = Count), position = position_dodge(0.9), vjust = 1.5, colour = "black")+
# ylim(0,12)+
scale_y_continuous(breaks= c(3,6,9,12))+
labs(
title = "confidence in Conclusion by Condition",
x = "confidence",
x = NULL,
y="Number of participants"
)+
theme(legend.position="top")+
boldTextTheme
View(df.Confidence)
View(df.Confidence)
##### Conclusion Conf. ####
df.Confidence %>%
ggplot(data=., aes(x=Confidence,y=Count,fill=Condition))+
my_fill_colors +
geom_bar(position="dodge", stat="identity", col="#353535")+
geom_text(aes(label = Count), position = position_dodge(0.9), vjust = 1.5, colour = "black")+
# ylim(0,12)+
scale_y_continuous(breaks= c(3,6,9,12))+
labs(
title = "confidence in Conclusion by Condition",
x = "confidence",
x = NULL,
y="Number of participants"
)+
theme(legend.position="top")+
boldTextTheme
##### Conclusion Conf. ####
df.Confidence %>%
ggplot(data=., aes(x=Confidence,y=Count,fill=Condition))+
my_fill_colors +
geom_bar(position="dodge", stat="identity", col="#353535")+
geom_text(aes(label = Count), position = position_dodge(0.9), vjust = 1.5, colour = "black")+
# ylim(0,12)+
scale_y_continuous(breaks= c(3,6,9,12))+
labs(
title = "Confidence in Conclusion by Condition",
x = "confidence",
x = NULL,
y="Number of participants"
)+
theme(legend.position="top")+
boldTextTheme
